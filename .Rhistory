setwd("~/GitHub/Repositorio-Titanic-Dataset")
# Chunk de configuración global
knitr::opts_chunk$set(echo = TRUE, warning = FALSE, message = FALSE)
# Escribe tu código aquí para cargar los datos
# superstore <- ...
read_excel( “Sample - Superstore.xls”)
# Escribe tu código aquí para cargar los datos
# superstore <- ...
read_excel(Sample - Superstore.xl)
# Escribe tu código aquí para cargar los datos
# superstore <- ...
read_excel(Sample - Superstore)
# Escribe tu código aquí para cargar los datos
Superstore <- read_excel(C:\\Users\\YELITZE ZAPATA\\Downloads)
# Escribe tu código aquí para cargar los datos
Superstore <- read_excel(C:\\Users\\YELITZE ZAPATA\\Downloads\\Sample - Superstore.xls)
# Escribe tu código aquí para cargar los datos
challenge <- read_excel("C:\\Users\\YELITZE ZAPATA\\Downloads\\Sample - Superstore.xls")
# Escribe tu código aquí para cargar los datos
challenge <- read_excel("ZAPATA\Downloads\Sample - Superstore.xls")
# Escribe tu código aquí para cargar los datos
challenge <- read_excel("ZAPATA\\Downloads\\Sample - Superstore.xls")
# Escribe tu código aquí para cargar las bibliotecas
library(tidyverse)
library(readxl)
library(janitor)
# Escribe tu código aquí para cargar las bibliotecas
library(tidyverse)
library(readxl)
library(janitor)
# Escribe tu código aquí para cargar las bibliotecas
library(tidyverse)
library(readxl)
library(janitor)
# Escribe tu código aquí para cargar las bibliotecas
library(tidyverse)
library(readxl)
library(janitor)
install.packages("janitos")
# Escribe tu código aquí para cargar las bibliotecas
library(tidyverse)
library(readxl)
library(janitor)
install.packages("janitor")
# Escribe tu código aquí para cargar las bibliotecas
library(tidyverse)
library(readxl)
library(janitor)
library(lubridate)
# Escribe tu código aquí para cargar los datos
challenge <- read_excel("ZAPATA\\Downloads\\Sample - Superstore.xls")
# Escribe tu código aquí para cargar los datos
challenge <- read_excel("ZAPATA\\Downloads\\Sample - Superstore.xls")
# Escribe tu código aquí para cargar los datos
challenge <- read_excel("C:\\Users\\YELITZE ZAPATA\\OneDrive\\Documents\\Call of Duty\\Sample - Superstore.xls")
# Escribe tu código aquí para cargar los datos
challenge <- read_excel("C:\\Users\\YELITZE ZAPATA\\OneDrive\\Documents\\Call of Duty\\Sample - Superstore.xls")
print(challenge)
# Escribe tu código aquí para usar glimpse()
glimpse(challenge)
# Escribe tu código aquí para usar summary()
# Escribe tu código aquí para usar glimpse()
glimpse(challenge)
# Escribe tu código aquí para usar summary()
summary(challenge)
# Escribe tu código aquí para limpiar los nombres
challenge1 <- clean_names(Superstore)
# Escribe tu código aquí para limpiar los nombres
challenge1 <- clean_names("Order ID", "Ship Mode")
# Escribe tu código aquí para limpiar los nombres
challenge1 <- clean_names(Order ID, Ship Mode)
# Escribe tu código aquí para limpiar los nombres
challenge1 <- clean_names(OrderID, Ship Mode)
# Escribe tu código aquí para limpiar los nombres
challenge <- clean_names(Order ID, Ship Mode)
# Escribe tu código aquí para limpiar los nombres
challenge <- clean_names(OrderID, Ship Mode)
# Escribe tu código aquí para limpiar los nombres
challenge <- clean_names(Superstore)
# Escribe tu código aquí para limpiar los nombres
print(names(challenge))
challenge_limpio <- challenge %>%
clean_names()
print(names(challenge_limpio))
# Escribe tu código aquí para limpiar los nombres
print(names(challenge))
challenge_nuevo <- challenge %>%
clean_names()
print(names(challenge_nuevo))
# Escribe tu código aquí para sumar todos los NAs
challenge_1 <- sum(is.na(challenge_limpio))
# Escribe tu código aquí para sumar todos los NAs
challenge_1 <- sum(is.na(challenge_limpio))
print(challenge_1)
# Escribe tu código aquí para sumar todos los NAs
challenge_1 <- sum(is.na(challenge_limpio))
print(challenge_1)
# Escribe tu código aquí para sumar todos los NAs
challenge_1 <- sum(is.na(challenge_nuevo))
print(challenge_1)
# Escribe tu código aquí (group_by, summarise, arrange)
(callenge_1, semmarise,arrange)
# Escribe tu código aquí (group_by, summarise, arrange)
challenge_1 ( semmarise,arrange)
# Escribe tu código aquí para sumar todos los NAs
challenge_1 <- sum(is.na(challenge_nuevo))
print(challenge_1)
# Escribe tu código aquí (group_by, summarise, arrange)
challenge_nuevo( semmarise,arrange)
# Chunk de configuración global
knitr::opts_chunk$set(echo = TRUE, warning = FALSE, message = FALSE)
# Escribe tu código aquí (group_by, summarise, arrange)
ordenes_por_segmento  <- challenge_1 %>%
select(segment)  %>%
count(segment, name = "Totales")
# Escribe tu código aquí (group_by, summarise, arrange)
ordenes_por_segmento  <- challenge_1 %>%
select(segment)  %>%
count(segment, name = "Totales")
# Escribe tu código aquí (group_by, summarise, arrange)
ordenes_por_segmento  <- challenge_1 %>%
select(segment)  %>%
count(segment, name = "Totales")
# Escribe tu código aquí (group_by, summarise, arrange)
challenge_arreglado <- challenge_1 %>%
select(segment)  %>%
count(segment, name = "Totales")
# Escribe tu código aquí (group_by, summarise, arrange)
challenge_arreglado <- challenge_1 %>%
select(segment)  %>%
count(segment, name = "Totales")
# Escribe tu código aquí (group_by, summarise, arrange)
challenge_arreglado <- challenge_1 %>%
select(segment)  %>%
count(segment, name = "Totales")
# Escribe tu código aquí (group_by, summarise, arrange)
challenge_arreglado <- challenge_1 %>%
select(segment)  %>%
count(segment, name = "Totales")
# Escribe tu código aquí (group_by, summarise, arrange)
challenge_arreglado <- challenge_1 %>%
select(Segment)  %>%
count(Segment, name = "Totales")
# Escribe tu código aquí (group_by, summarise, arrange)
challenge_arreglado <- challenge_1 %>%
select(Segment)  %>%
count(Segment, name = "Totales")
# Escribe tu código aquí (group_by, summarise, arrange)
challenge2 <- challenge_1 %>%
group_by(farmatodo$SEGMENT) %>%
summarise(num_ordenes = n()) %>%
arrange(desc(num_ordenes))
# Escribe tu código aquí (group_by, summarise, arrange)
challenge2 <- challenge_1 %>%
group_by(challenge2) %>%
summarise(num_ordenes = n()) %>%
arrange(desc(num_ordenes))
# Escribe tu código aquí (group_by, summarise, arrange)
challenge2 <- challenge_1 %>%
group_by(challenge2) %>%
summarise(num_ordenes = n()) %>%
arrange(desc(num_ordenes))
# Escribe tu código aquí (group_by, summarise, arrange)
challenge2 <- challenge_1 %>%
group_by(challenge2) %>%
summarise(num_ordenes = n()) %>%
arrange(desc(num_ordenes))
# Escribe tu código aquí (group_by, summarise, arrange)
challenge2 <- challenge_1 %>%
group_by(Segment) %>%
summarise(num_ordenes = n()) %>%
arrange(desc(num_ordenes))
# Escribe tu código aquí (group_by, summarise, arrange)
challenge2 <- challenge_1 %>%
group_by(Segment) %>%
summarise(num_ordenes = n()) %>%
arrange(desc(num_ordenes))
# Escribe tu código aquí (group_by, summarise, arrange)
challenge2 <- challenge_1 %>%
group_by(challenge_1$Segment) %>%
summarise(num_ordenes = n()) %>%
arrange(desc(num_ordenes))
# Escribe tu código aquí para sumar todos los NAs
challenge_1 <- sum(is.na(challenge_nuevo))
print(challenge_1)
# Escribe tu código aquí (group_by, summarise, arrange)
challenge2 <- challenge_nuevo %>%
group_by(challenge_1$Segment) %>%
summarise(num_ordenes = n()) %>%
arrange(desc(num_ordenes))
# Escribe tu código aquí (group_by, summarise, arrange)
challenge2 <- challenge_nuevo %>%
group_by(challenge_nuevo$Segment) %>%
summarise(num_ordenes = n()) %>%
arrange(desc(num_ordenes))
print(challenge2)
# Escribe tu código aquí (group_by, summarise, arrange)
challenge_nuevo %>%
group_by(category) %>%
sumarise(ventas_totales = sum(sales), ganacias_totales = sum(profit)) %>%
arrange (desc(ganancias_totales))
# Escribe tu código aquí (group_by, summarise, arrange)
challenge_ventas <- challenge_nuevo%>%
group_by(category) %>%
summarise(ventas_totales = sum(sales, na.rm = TRUE),
ganancias_totales = sum(profit, na.rm = TRUE)) %>%
arrange(desc(ganancias_totales))
print(challenge_ventas)
# Escribe tu código aquí
categorias <- challenge_nuevo %>%
group_by(SUB_CATEGORY) %>%
summarise(total_profit = sum(PROFIT, na.rm = TRUE)) %>%
arrange(total_profit) %>%
slice(1)
# Escribe tu código aquí
categorias <- challenge_nuevo %>%
group_by(Sub_Category) %>%
summarise(total_profit = sum(PROFIT, na.rm = TRUE)) %>%
arrange(total_profit) %>%
slice(1)
# Escribe tu código aquí
categorias <- challenge_nuevo %>%
group_by(Sub_Category) %>%
summarise(total_profit = sum(PROFIT, na.rm = TRUE)) %>%
arrange(total_profit) %>%
slice(1)
# Escribe tu código aquí
categorias <- challenge_nuevo %>%
group_by(Sub-Category) %>%
summarise(total_profit = sum(PROFIT, na.rm = TRUE)) %>%
arrange(total_profit) %>%
slice(1)
# Escribe tu código aquí
categorias <- challenge_nuevo %>%
group_by(Sub-Category) %>%
summarise(total_profit = sum(PROFIT, na.rm = TRUE)) %>%
arrange(total_profit) %>%
slice(1)
# Escribe tu código aquí
categorias <- challenge_nuevo %>%
group_by("Sub-Category") %>%
summarise(total_profit = sum(PROFIT, na.rm = TRUE)) %>%
arrange(total_profit) %>%
slice(1)
# Escribe tu código aquí
categorias <- challenge_nuevo %>%
group_by(´Sub-Category´) %>%
# Escribe tu código aquí
categorias <- challenge_nuevo %>%
group_by(challenge_nuevo$sub_category) %>%
summarise(total_profit = sum(PROFIT, na.rm = TRUE)) %>%
arrange(total_profit) %>%
slice(1)
# Escribe tu código aquí
categorias <- challenge_nuevo %>%
group_by(challenge_nuevo$sub_category) %>%
summarise(total_profit = sum(PROFIT, na.rm = TRUE)) %>%
arrange(total_profit) %>%
slice(1)
# Escribe tu código aquí
categorias <- challenge_nuevo %>%
group_by(challenge_nuevo$sub_category) %>%
summarise(total_Profit = sum(PROFIT, na.rm = TRUE)) %>%
arrange(total_Profit) %>%
slice(1)
# Escribe tu código aquí
categorias <- challenge_nuevo %>%
group_by(challenge_nuevo$sub_category) %>%
summarise(total_profit = sum(PROFIT, na.rm = TRUE)) %>%
arrange(total_profit) %>%
slice(1)
# Escribe tu código aquí
categorias <- challenge_nuevo %>%
group_by(challenge_nuevo$sub_category) %>%
summarise(total_profit = sum(profit, na.rm = TRUE)) %>%
arrange(total_profit) %>%
slice(1)
# Imprimir el resultado
print(categorias)
# Escribe tu código de ggplot aquí
grafico <- ggplot(data = challenge_nuevo, aes(x = Ship Mode)) +
# Escribe tu código de ggplot aquí
grafico <- ggplot(data = challenge_nuevo, aes(x = Ship Mode)) +
# Escribe tu código de ggplot aquí
grafico <- ggplot(data = challenge_nuevo, aes(x = Ship Mode)) +
# Escribe tu código de ggplot aquí
grafico <- ggplot(data = challenge_nuevo, aes(x = challenge_nuevo$ship_mode)) +
geom_bar() +
labs(
title = "Distribucion del Modo de Envio",
x = "Modo de Envio",
y = "Frecuencia (Conteo)"
) +
theme_minimal()
print(grafico)
# Escribe tu código de ggplot aquí
ggplot(data = challenge_nuevo, aes(x = sales, y = profit, color = category)) +
geom_point() +
labs(
title = "ventas",
subtitle = "compras y ganancias",
x = "compras",
y = "Ganancias",
color = "Categoria"
) +
theme_minimal()
knitr::opts_chunk$set(echo = TRUE, warning = FALSE, message = FALSE)
# Cargar librerías
if(!require(tidyverse)) install.packages("tidyverse")
if(!require(ggplot2)) install.packages("ggplot2")
if(!require(kableExtra)) install.packages("kableExtra")
library(tidyverse)
library(ggplot2)
library(kableExtra)
# Cargar dataset del Titanic
titanic_data <- read.csv("https://raw.githubusercontent.com/gabrielgonzalezalfredo093-beep/Repositorio-Titanic-Dataset/refs/heads/main/Titanic-Dataset.csv", stringsAsFactors = FALSE)
# Ver estructura inicial
cat("Dimensiones del dataset:", dim(titanic_data), "\n")
cat("Variables disponibles:", names(titanic_data), "\n\n")
# Mostrar primeras filas
head(titanic_data) %>% kable() %>% kable_styling(bootstrap_options = "striped")
# Información básica del dataset
str(titanic_data)
summary(titanic_data)
# Crear copia del dataset para análisis
df <- titanic_data
# Renombrar variables en español
df <- df %>%
rename(
Sobrevivio = Survived,
Sexo = Sex,
Edad = Age,
Clase = Pclass
)
# Convertir variables categóricas
df <- df %>%
mutate(
Sobrevivio = factor(Sobrevivio, levels = c(0, 1), labels = c("No", "Sí")),
Sexo = factor(Sexo, levels = c("male", "female"), labels = c("Hombre", "Mujer")),
# Crear copia del dataset para análisis
df <- titanic_data
# Renombrar variables en español
df <- df %>%
rename(
Sobrevivio = Survived,
Sexo = Sex,
Edad = Age,
Clase = Pclass
)
# Convertir variables categóricas
df <- df %>%
mutate(
Sobrevivio = factor(Sobrevivio, levels = c(0, 1), labels = c("No", "Sí")),
Sexo = factor(Sexo, levels = c("male", "female"), labels = c("Hombre", "Mujer")),
knitr::opts_chunk$set(echo = TRUE, warning = FALSE, message = FALSE)
# Cargar librerías
if(!require(tidyverse)) install.packages("tidyverse")
if(!require(ggplot2)) install.packages("ggplot2")
if(!require(kableExtra)) install.packages("kableExtra")
library(tidyverse)
library(ggplot2)
library(kableExtra)
# Cargar dataset del Titanic
titanic_data <- read.csv("https://raw.githubusercontent.com/gabrielgonzalezalfredo093-beep/Repositorio-Titanic-Dataset/refs/heads/main/Titanic-Dataset.csv", stringsAsFactors = FALSE)
# Ver estructura inicial
cat("Dimensiones del dataset:", dim(titanic_data), "\n")
cat("Variables disponibles:", names(titanic_data), "\n\n")
# Mostrar primeras filas
head(titanic_data) %>% kable() %>% kable_styling(bootstrap_options = "striped")
# Información básica del dataset
str(titanic_data)
summary(titanic_data)
# Crear copia del dataset para análisis
df <- titanic_data
# Renombrar variables en español
df <- df %>%
rename(
Sobrevivio = Survived,
Sexo = Sex,
Edad = Age,
Clase = Pclass
)
# Convertir variables categóricas
df <- df %>%
mutate(
Sobrevivio = factor(Sobrevivio, levels = c(0, 1), labels = c("No", "Sí")),
Sexo = factor(Sexo, levels = c("male", "female"), labels = c("Hombre", "Mujer")),
# Análisis de supervivencia global
superv_global <- df %>%
count(Sobrevivio) %>%
mutate(Porcentaje = round(n/sum(n)*100, 2))
cat("Distribución de Supervivencia Global:\n")
superv_global %>% kable() %>% kable_styling()
# Gráfico de supervivencia global
ggplot(superv_global, aes(x = Sobrevivio, y = n, fill = Sobrevivio)) +
geom_bar(stat = "identity") +
geom_text(aes(label = paste0(n, " (", Porcentaje, "%)")), vjust = -0.5) +
labs(title = "Distribución de Supervivencia en el Titanic",
x = "Sobrevivió", y = "Número de Pasajeros") +
# Análisis de distribución por sexo
dist_sexo <- df %>%
count(Sexo) %>%
mutate(Porcentaje = round(n/sum(n)*100, 2))
cat("Distribución por Sexo:\n")
dist_sexo %>% kable() %>% kable_styling()
# Gráfico de distribución por sexo
ggplot(dist_sexo, aes(x = Sexo, y = n, fill = Sexo)) +
geom_bar(stat = "identity") +
geom_text(aes(label = paste0(n, " (", Porcentaje, "%)")), vjust = -0.5) +
labs(title = "Distribución de Pasajeros por Sexo",
x = "Sexo", y = "Número de Pasajeros") +
theme_minimal() +
scale_fill_manual(values = c("Hombre" = "#3498db", "Mujer" = "#e91e63"))
# Cálculo de métricas clave
resumen_final <- list(
"Tasa Supervivencia Global" = paste0(round(mean(df$Sobrevivio == "Sí") * 100, 1), "%"),
# Estadísticas de edad por grupo de supervivencia
estadisticas_edad_superv <- df %>%
group_by(Sobrevivio) %>%
summarise(
n = n(),
Media_Edad = mean(Edad, na.rm = TRUE),
Mediana_Edad = median(Edad, na.rm = TRUE),
SD_Edad = sd(Edad, na.rm = TRUE),
Min_Edad = min(Edad, na.rm = TRUE),
Max_Edad = max(Edad, na.rm = TRUE),
.groups = 'drop'
)
cat("Estadísticas de Edad por Estado de Supervivencia:\n")
estadisticas_edad_superv %>% kable(digits = 2) %>% kable_styling()
# Boxplot de edades por supervivencia
ggplot(df, aes(x = Sobrevivio, y = Edad, fill = Sobrevivio)) +
geom_boxplot(alpha = 0.7) +
labs(title = "Distribución de Edades por Estado de Supervivencia",
x = "Sobrevivió", y = "Edad") +
# Cargar librerías
if(!require(tidyverse)) install.packages("tidyverse")
if(!require(ggplot2)) install.packages("ggplot2")
if(!require(kableExtra)) install.packages("kableExtra")
library(tidyverse)
library(ggplot2)
library(kableExtra)
# Cargar dataset del Titanic
titanic_data <- read.csv("https://raw.githubusercontent.com/gabrielgonzalezalfredo093-beep/Repositorio-Titanic-Dataset/refs/heads/main/Titanic-Dataset.csv", stringsAsFactors = FALSE)
# Ver estructura inicial
cat("Dimensiones del dataset:", dim(titanic_data), "\n")
cat("Variables disponibles:", names(titanic_data), "\n\n")
# Mostrar primeras filas
head(titanic_data) %>% kable() %>% kable_styling(bootstrap_options = "striped")
# Información básica del dataset
str(titanic_data)
summary(titanic_data)
# Crear copia del dataset para análisis
df <- titanic_data
# Renombrar variables en español
df <- df %>%
rename(
Sobrevivio = Survived,
Sexo = Sex,
Edad = Age,
Clase = Pclass
)
# Convertir variables categóricas
df <- df %>%
mutate(
Sobrevivio = factor(Sobrevivio, levels = c(0, 1), labels = c("No", "Sí")),
Sexo = factor(Sexo, levels = c("male", "female"), labels = c("Hombre", "Mujer")),
# Crear copia del dataset para análisis
df <- titanic_data
# Renombrar variables en español
df <- df %>%
rename(
Sobrevivio = Survived,
Sexo = Sex,
Edad = Age,
Clase = Pclass
)
# Convertir variables categóricas
df <- df %>%
mutate(
Sobrevivio = factor(Sobrevivio, levels = c(0, 1), labels = c("No", "Sí")),
Sexo = factor(Sexo, levels = c("male", "female"), labels = c("Hombre", "Mujer")),
# Tabla de contingencia: Supervivencia vs Grupo de Edad
tabla_edad <- table(df$Grupo_Edad, df$Sobrevivio)
# Análisis combinado de sexo y grupos etarios
analisis_combinado <- df %>%
group_by(Sexo, Grupo_Edad) %>%
summarise(
Total = n(),
Sobrevivientes = sum(Sobrevivio == "Sí"),
Tasa_Supervivencia = round(Sobrevivientes/Total * 100, 2),
.groups = 'drop'
)
cat("Análisis Combinado: Sexo y Grupo de Edad\n")
knitr::opts_chunk$set(echo = TRUE, warning = FALSE, message = FALSE)
# Cargar librerías
if(!require(tidyverse)) install.packages("tidyverse")
if(!require(ggplot2)) install.packages("ggplot2")
if(!require(kableExtra)) install.packages("kableExtra")
library(tidyverse)
library(ggplot2)
library(kableExtra)
# Cargar dataset del Titanic
titanic_data <- read.csv("https://raw.githubusercontent.com/gabrielgonzalezalfredo093-beep/Repositorio-Titanic-Dataset/refs/heads/main/Titanic-Dataset.csv", stringsAsFactors = FALSE)
# Ver estructura inicial
cat("Dimensiones del dataset:", dim(titanic_data), "\n")
cat("Variables disponibles:", names(titanic_data), "\n\n")
# Mostrar primeras filas
head(titanic_data) %>% kable() %>% kable_styling(bootstrap_options = "striped")
# Información básica del dataset
str(titanic_data)
summary(titanic_data)
